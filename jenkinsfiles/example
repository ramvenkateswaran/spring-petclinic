#!/bin/env groovy

pipeline {
  agent none

  environment {
    IMAGE = "liatrio/petclinic-tomcat"
  }

  stages {
    stage('Build') {
      agent any
      steps {
        sh 'mvn clean install'
      }
    }
    stage('Package') {
      agent any
      steps {
        script {
          if ( env.BRANCH_NAME == 'master' ) {
            pom = readMavenPom file: 'pom.xml'
            TAG = pom.version
          } else {
            TAG = env.BRANCH_NAME
          }
          sh "docker build -t ${env.IMAGE}:${TAG} ."
        }
      }
    }
    stage('Deploy to Test') {
      agent any
      steps {
        sh 'docker rm -f petclinic-tomcat-temp || true'
        sh "docker run -d -p 9966:8080 --name petclinic-tomcat-temp ${env.IMAGE}:${TAG}"
      }
    }
    stage('Run Tests') {
            parallel {
                stage('Unit Tests') {
                    agent any
                    steps {
                        echo "Unit Test"
                    }
                }
                stage('Integration Tests') {
                    agent any
                    steps {
                        echo "Integration Test"
                    }
                 }
                stage('Other Tests') {
                    agent any
                    steps {
                        echo "Integration Test"
                    }
                }
            }
        }
    stage('Capture Results') {
      agent any
      steps {
        //capture test results and destroy test environment
        sh 'sleep 4'
      }
    }
    stage('Setup Staging') {
        agent any
	steps {
	//Clone down production environment
	sh 'sleep 4'   
        }
      }
    stage('Deploy to Staging') {
        agent any
	steps {
	//Clone down production environment
	sh 'sleep 4'   
        }
     }
    stage('Run Pre-production Tests') {
        parallel {
                stage('Functional Tests') {
                    agent any
                    steps {
                        echo "Functional Test"
                    }
                }
                stage('Performance Tests') {
                    agent any
                    steps {
                        echo "Performance Test"
                    }
                 }
                stage('Other Tests') {
                    agent any
                    steps {
                        echo "Other Test"
                 }
            }
        }
    }
    stage('Review, Approval & Archive') {
        agent any
	steps {
	//Manual Step, Update Docker Registry, etc.
	sh 'sleep 4'   
        }
 }
    stage('Deploy to Production') {
        agent any
	steps {
	//Staging environment can become the new production environment
	sh 'sleep 4'   
        }
                }
            }
        }
